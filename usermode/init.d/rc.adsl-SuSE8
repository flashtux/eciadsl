#!/bin/sh

### BEGIN INIT INFO
# Provides:       postgresql
# Required-Start: $network $remote_fs $xdm
# Required-Stop:
# Default-Start:  3 5
# Default-Stop:   0 1 2 3 5 6
# Description:    Start the ECIADSL USB modem driver
### END INIT INFO

. /etc/rc.status

# Determine the base and follow a runlevel link name.
base=${0##*/}
link=${base#*[SK][0-9][0-9]}

# Force execution if not called by a runlevel directory.
test $link = $base && START_ADSL=yes
test "$START_ADSL" = yes || exit 0


# BEGIN OF CONFIG_SECTION

EXEC_PREFIX="/usr/local/bin"

# END OF CONFIG_SECTION

# The echo return value for success (defined in /etc/rc.config).
return=$rc_done

case "$1" in
        start)
                echo -n "Starting adsl: "
                PATH=$EXEC_PREFIX:/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/bin:/sbin startmodem || return=$rc_failed
                echo -e "$return"
        ;;
        stop)
                echo -n "Shutting down adsl: "
#                $EXEC_PREFIX/adsl-autoconnect --stop-services && \
                killproc -TERM $EXEC_PREFIX/pppoeci /usr/sbin/pppd || return=$rc_failed
                echo -e "$return"
        ;;
        status)
                echo -n "Checking for adsl: "
                checkproc $EXEC_PREFIX/pppoeci && echo OK || echo No process
                exit 0
                ;;
        restart)
                $0 stop && $0 start
                exit $?
                ;;
        *)
                echo "Usage: rc.adsl {start|stop|status|restart}"
                exit 1
esac

# Inform the caller not only verbosely and set an exit status.
test "$return" = "$rc_done" || exit 1
exit 0
