#!/bin/sh

# Author   : Jean-Sebastien VALETTE <jean-sebastien.valette@libertysurf.fr>
# Creation : 06/12/2001
# Licence  : GPL

# 21/10/2002 wwp:
# default .bin is synch01.bin now, /etc/eciadsl/synch.bin is a symlink to this one!

# 03/02/2002: added a sleep 2 after loading USB controller driver, as suggested
# by Sebastien YAPO <sebastien.yapo@free.fr>.

# 07/02/2002: added the CVS Id
# CVS $Id$
# Tag $Name$

# 15/02/2002 Benoit PAPILLAULT
#   remove "modprobe uhci" since this module never worked with this modem

# 13/06/2002 Sebastien HELLEU <flashcode@free.fr>
#   new file: /etc/eciadsl/vidpid : contains vid/pid (1 & 2) for your modem
#             example of content ECI:   0547 2131 0915 8000

# 03/07/2002 Sebastien HELLEU <flashcode@free.fr>
#   new file: /etc/eciadsl/eci_wan.bin (created by Makefile and eciconf) :
#             this is a link to your .bin
#   to change your .bin file, run eciconf or type this command :
#     rm /etc/eciadsl/eci_wan.bin && ln -s /path/your.bin /etc/eciadsl/eci_wan.bin

PATH=/bin:/sbin:/usr/bin:/usr/sbin

#
#   Ugly stuff to check for eci-load? location.
#   If not in path assume it is in /usr/local/bin
#
export ECILOAD1
ECILOAD1=`which eci-load1`
if [ -f $ECILOAD1 ]; then
    ECILOAD1=/usr/local/bin/eci-load1
    echo "test : $ECILOAD1"
fi


ECILOAD2=`which eci-load2`
if [ -f $ECILOAD2 ]; then
    ECILOAD2=/usr/local/bin/eci-load2
fi

if [ ! -d /proc/bus/usb ]; then
    echo "Loading support for USB"
    modprobe usbcore
	sleep 1
fi

if [ -e /etc/eciadsl/vidpid ]; then
    vid1=`cat /etc/eciadsl/vidpid | cut -f1 -d' '`
    pid1=`cat /etc/eciadsl/vidpid | cut -f2 -d' '`
    vid2=`cat /etc/eciadsl/vidpid | cut -f3 -d' '`
    pid2=`cat /etc/eciadsl/vidpid | cut -f4 -d' '`
    echo "vid/pid read from /etc/eciadsl/vidpid: $vid1/$pid1 $vid2/$pid2"
else
    vid1="0547"
    pid1="2131"
    vid2="0915"
    pid2="8000"
fi

# mount usbdevfs is this is not the case
if [ ! -f /proc/bus/usb/devices ]; then
    echo "Loading preliminary USB device filesystem" 
    mount -t usbdevfs none /proc/bus/usb
fi

#verify if dabusb is loaded
lsmod|grep dabusb > /dev/null
if [ $? == "0" ]; then
    echo "Dabusb seems to be present trying to remove it..."
    modprobe -r dabusb
	sleep 1
    lsmod|grep dabusb > /dev/null
	if [ $? == "0" ]; then
		echo "Couldn't remove dabusb try rmmod dabusb manually"
	else
		echo "Removed dabusb successfully"
	fi
fi

#verify if ehci-hcd is loaded
lsmod|grep ehci-hcd > /dev/null
if [ $? == "0" ]; then
    echo "ehci-hcd seems to be present trying to remove it..."
    modprobe -r ehci-hcd
	sleep 1
    lsmod|grep ehci-hcd > /dev/null
	if [ $? == "0" ]; then
		echo "Couldn't remove ehci-hcd try rmmod ehci-hcd manually"
	else
		echo "Removed ehci-hcd successfully"
	fi
fi

# try to locate UHCI controller
grep -A 4 USB /proc/pci | grep I/O > /dev/null
if [ $? -eq 0 ]; then
	# ok, we have a UHCI controller, check if the linux driver is loaded
    grep "^S:  Product=USB UHCI Root Hub" /proc/bus/usb/devices > /dev/null
    if [ $? -ne 0 ]; then
        echo "Loading UHCI support"
        modprobe usb-uhci
        sleep 2
    fi
fi

# try to locate OHCI controller
grep -A 4 USB /proc/pci | grep memory > /dev/null
if [ $? -eq 0 ]; then
	# ok, we have a OHCI controller, check if the linux driver is loaded
    grep "^S:  Product=USB OHCI Root Hub" /proc/bus/usb/devices > /dev/null
    if [ $? -ne 0 ]; then
        echo "Loading OHCI support"
        modprobe usb-ohci
        sleep 2
    fi
fi

echo "Init modem ..."

# check for the EZ-USB chips. If it's not there, maybe the firmware is
# already loaded ... so continue.
if [ $# != "4" ]; then
	grep "^P:  Vendor=$vid1 ProdID=$pid1" /proc/bus/usb/devices > /dev/null
else
	grep "^P:  Vendor=$1 ProdID=$2" /proc/bus/usb/devices > /dev/null
fi
if [ $? -eq 0 ]; then
    echo "  Load Firmware ..."
    if [ $# != "4" ]; then
        $ECILOAD1 0x$vid1 0x$pid1 0x$vid2 0x$pid2 /etc/eciadsl/firmware.bin
    else
        $ECILOAD1 0x$1 0x$2 0x$3 0x$4 /etc/eciadsl/firmware.bin
    fi
    if [ $? -ne 0 ]; then
        echo "Failed to load firmware"
        exit -1
    fi
    echo "  ... Load Firmware OK"
fi

if [ $# != "4" ]; then
grep "^P:  Vendor=$vid2 ProdID=$pid2" /proc/bus/usb/devices > /dev/null
else
grep "^P:  Vendor=$3 ProdID=$4" /proc/bus/usb/devices > /dev/null
fi
if [ $? -ne 0 ]; then
    echo "I can't find your modem... sorry :-("
    exit -1
fi

echo "  Setup modem ..."
if [ $# != "4" ]; then
    $ECILOAD2 0x$vid2 0x$pid2 /etc/eciadsl/synch.bin
else
    $ECILOAD2 0x$3 0x$4 /etc/eciadsl/synch.bin
fi
if [ $? -ne 0 ] ; then
    echo "Failed to setup the modem"
    exit -1
fi
echo "  ... Setup Modem OK"

echo "... modem init OK"

echo "Connect Modem ..."
nice --20 pppd call adsl updetach
if [ $? -ne 0 ] ; then
    echo "Connexion failed"
    exit -1
fi
echo "... Connect Modem OK"

# The default route should be added automatically if no default route
# already exists. If you already have a default route using your
# ethernet card, you should configure your ethernet card.

exit 0

# Wait until ppp0 get available
COUNTER=20
FLREADY="no"
echo "Add Default route ..."
echo -n "   wait for ppp0 : "
for (( times = 1; times < $COUNTER; times++ )) ; do
    FOUND=`ifconfig | grep ppp0`
    if [ ! -z "$FOUND" ] ; then
        FLREADY="yes"
        break
    fi
    sleep 1
    echo -n "."
done

echo
unset COUNTER
unset FOUND

if [ "$FLREADY" = "yes" ] ; then
    echo "  ppp0 now available"
    route add default dev ppp0
    echo "Default route added"
else
    echo "No device found"
    unset FLREADY
    exit -1
fi

unset FLREADY

exit 0
